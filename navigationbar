import 'package:flutter/material.dart';

void main() => runApp(const MyApp());

class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      theme: ThemeData(
        primaryColor: const Color(0xff29AFFF), // Warna Primer
      ),
      home: NavigationExample(),
    );
  }
}

class NavigationExample extends StatefulWidget {
  const NavigationExample({Key? key}) : super(key: key);

  @override
  State<NavigationExample> createState() => _NavigationExampleState();
}

class _NavigationExampleState extends State<NavigationExample> {
  int currentPageIndex = 0;

  List<Widget> pages = [
    HomePage(),
    ThriveHubPage(),
    ProfilePage(), // Changed from AccountPage to ProfilePage
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: pages[currentPageIndex],
      bottomNavigationBar: BottomNavigationBar(
        currentIndex: currentPageIndex,
        onTap: (int index) {
          setState(() {
            currentPageIndex = index;
          });
        },
        items: const <BottomNavigationBarItem>[
          BottomNavigationBarItem(
            icon: Icon(Icons.home),
            label: 'Home',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.business_center),
            label: 'Thrive Hub',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.account_circle),
            label: 'Akun',
          ),
        ],
      ),
    );
  }
}

class HomePage extends StatefulWidget {
  const HomePage({Key? key}) : super(key: key);

  @override
  _HomePageState createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
  @override
  Widget build(BuildContext context) {
    return SingleChildScrollView(
      child: Padding(
        padding: const EdgeInsets.symmetric(horizontal: 20),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: <Widget>[
            const SizedBox(height: 20),
            Text(
              'Hi Steven Dermawan!',
              style: TextStyle(fontSize: 24, color: Colors.black),
            ),
            const SizedBox(height: 10),
            const Text(
              'Let\'s Connect, Growth, and Thrive.',
              style: TextStyle(fontSize: 18, color: Colors.black),
            ),
            const SizedBox(height: 20),
            // Searching Bar
            TextFormField(
              decoration: InputDecoration(
                hintText: 'Search',
                hintStyle: TextStyle(color: Colors.grey),
                prefixIcon: Icon(Icons.search, color: Colors.grey),
                border: OutlineInputBorder(
                  borderRadius: BorderRadius.circular(10),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Text(
              'Komunitas Rekomendasi',
              style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
            ),
            const SizedBox(height: 10),
            // Menampilkan tiga card secara horizontal yang dapat diluncurkan dari kanan ke kiri
            SizedBox(
              height: 200, // Atur tinggi kartu di sini
              child: ListView(
                scrollDirection: Axis.horizontal,
                children: [
                  CardExample(
                    title: 'Komunitas Gambar',
                    subtitle: 'Diskusi tentang seni visual',
                    content:
                        'Bergabunglah dengan komunitas ini untuk berbagi dan mendiskusikan karya seni visual favorit Anda.',
                    onPressed1: () {
                      // Action for the first button
                    },
                    onPressed2: () {
                      // Action for the second button
                    },
                  ),
                  const SizedBox(width: 10),
                  CardExample(
                    title: 'Komunitas Catur',
                    subtitle: 'Diskusi tentang permainan catur',
                    content:
                        'Bergabunglah dengan pecinta catur lainnya untuk belajar strategi baru dan berbagi pengalaman bermain.',
                    onPressed1: () {
                      // Action for the first button
                      Navigator.push(
                        context,
                        MaterialPageRoute(builder: (context) => ChatForumPage()), // Navigasi ke halaman ChatForumPage
                      );
                    },
                    onPressed2: () {
                      // Action for the second button
                    },
                  ),
                  const SizedBox(width: 10),
                  CardExample(
                    title: 'Komunitas Esai',
                    subtitle: 'Berkumpul untuk menulis dan membaca esai',
                    content:
                        'Bergabunglah dengan para penulis dan pembaca untuk berbagi pemikiran dan karya tulis Anda.',
                    onPressed1: () {
                      // Action for the first button
                    },
                    onPressed2: () {
                      // Action for the second button
                    },
                  ),
                ],
              ),
            ),
            const SizedBox(height: 20),
            // Portal Informasi
            Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  'Portal Informasi',
                  style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
                ),
                const SizedBox(height: 10),
                // Toast
                Container(
                  width: double.infinity,
                  child: ElevatedButton(
                    onPressed: () {
                      // Handle button press
                      // Show toast with event information
                      ScaffoldMessenger.of(context).showSnackBar(
                        SnackBar(
                          content: Text(
                              'Informasi Event: Pameran IOT, 29 Mei 2024, 08.00 - 10.00, Universitas Pradita'),
                          duration: Duration(seconds: 3),
                        ),
                      );
                    },
                    child: Text('Event terdekat'),
                  ),
                ),
                const SizedBox(height: 20),
              ],
            ),
          ],
        ),
      ),
    );
  }
}

class ThriveHubPage extends StatefulWidget {
  @override
  _ThriveHubPageState createState() => _ThriveHubPageState();
}

class _ThriveHubPageState extends State<ThriveHubPage> {
  List<Community> communities = [
    Community(
      name: 'Komunitas Sosial',
      description: 'Bergabunglah dengan komunitas sosial untuk berbagi dan peduli pada sesama.',
      category: 'Sosial',
    ),
    Community(
      name: 'Komunitas Pendidikan',
      description: 'Temukan komunitas pendidikan untuk belajar bersama dan meningkatkan pengetahuan.',
      category: 'Pendidikan',
    ),
    Community(
      name: 'Komunitas Kesehatan',
      description: 'Saling berbagi informasi dan dukungan di dalam komunitas kesehatan.',
      category: 'Kesehatan',
    ),
    Community(
      name: 'Komunitas Lingkungan',
      description: 'Bersama-sama menjaga dan melestarikan lingkungan hidup untuk masa depan yang lebih baik.',
      category: 'Lingkungan',
    ),
  ];

  List<Community> filteredCommunities = [];

  String searchText = '';

  @override
  void initState() {
    filteredCommunities = communities;
    super.initState();
  }

  void filterCommunities(String query) {
    setState(() {
      searchText = query;
      filteredCommunities = communities
          .where((community) =>
              community.name.toLowerCase().contains(query.toLowerCase()) ||
              community.category.toLowerCase().contains(query.toLowerCase()))
          .toList();
    });
  }

  @override
  Widget build(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Padding(
          padding: const EdgeInsets.all(8.0),
          child: TextField(
            decoration: InputDecoration(
              labelText: 'Cari Komunitas',
              prefixIcon: Icon(Icons.search),
            ),
            onChanged: filterCommunities,
          ),
        ),
        ElevatedButton(
          onPressed: () {
            Navigator.push(
              context,
              MaterialPageRoute(builder: (context) => CreateCommunityPage()),
            );
          },
          child: Text('Buat Komunitas'),
        ),
        Expanded(
          child: ListView.builder(
            itemCount: filteredCommunities.length,
            itemBuilder: (context, index) {
              final community = filteredCommunities[index];
              return ListTile(
                title: Text(community.name),
                subtitle: Text(community.description),
                onTap: () {
                  // Implementasi untuk menavigasi ke halaman komunitas tertentu
                },
              );
            },
          ),
        ),
      ],
    );
  }
}

class ProfilePage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return SingleChildScrollView(
      child: Padding(
        padding: const EdgeInsets.symmetric(horizontal: 20),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: <Widget>[
            const SizedBox(height: 20),
            // Your existing profile code goes here
            Container(
              height: 250,
              decoration: BoxDecoration(
                gradient: LinearGradient(
                  colors: [Colors.red, Colors.deepOrange.shade300],
                  begin: Alignment.centerLeft,
                  end: Alignment.centerRight,
                  stops: [0.5, 0.9],
                ),
              ),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.center,
                mainAxisAlignment: MainAxisAlignment.center,
                children: <Widget>[
                  Row(
                    mainAxisAlignment: MainAxisAlignment.spaceAround,
                    children: <Widget>[
                      CircleAvatar(
                        backgroundColor: Colors.red.shade300,
                        minRadius: 35.0,
                        child: Icon(
                          Icons.call,
                          size: 30.0,
                        ),
                      ),
                      CircleAvatar(
                        backgroundColor: Colors.white70,
                        minRadius: 60.0,
                        child: CircleAvatar(
                          radius: 50.0,
                          backgroundImage: NetworkImage(
                              'https://avatars0.githubusercontent.com/u/28812093?s=460&u=06471c90e03cfd8ce2855d217d157c93060da490&v=4'),
                        ),
                      ),
                      CircleAvatar(
                        backgroundColor: Colors.red.shade300,
                        minRadius: 35.0,
                        child: Icon(
                          Icons.message,
                          size: 30.0,
                        ),
                      ),
                    ],
                  ),
                  SizedBox(
                    height: 10,
                  ),
                  Text(
                    'Leonardo Palmeiro',
                    style: TextStyle(
                      fontSize: 35,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                  Text(
                    'Flutter Developer',
                    style: TextStyle(
                      color: Colors.white,
                      fontSize: 25,
                    ),
                  ),
                ],
              ),
            ),
            Container(
              child: Row(
                children: <Widget>[
                  Expanded(
                    child: Container(
                      color: Colors.deepOrange.shade300,
                      child: ListTile(
                        title: Text(
                          '5000',
                          textAlign: TextAlign.center,
                          style: TextStyle(
                            fontWeight: FontWeight.bold,
                            fontSize: 30,
                            color: Colors.white,
                          ),
                        ),
                        subtitle: Text(
                          'Followers',
                          textAlign: TextAlign.center,
                          style: TextStyle(
                            fontSize: 20,
                            color: Colors.white70,
                          ),
                        ),
                      ),
                    ),
                  ),
                  Expanded(
                    child: Container(
                      color: Colors.red,
                      child: ListTile(
                        title: Text(
                          '5000',
                          textAlign: TextAlign.center,
                          style: TextStyle(
                            fontWeight: FontWeight.bold,
                            fontSize: 30,
                            color: Colors.white,
                          ),
                        ),
                        subtitle: Text(
                          'Following',
                          textAlign: TextAlign.center,
                          style: TextStyle(
                            fontSize: 20,
                            color: Colors.white70,
                          ),
                        ),
                      ),
                    ),
                  ),
                ],
              ),
            ),
            Container(
              child: Column(
                children: <Widget>[
                  ListTile(
                    title: Text(
                      'Email',
                      style: TextStyle(
                        color: Colors.deepOrange,
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                      ),
                    ),
                    subtitle: Text(
                      'palmeiro.leonardo@gmail.com',
                      style: TextStyle(
                        fontSize: 18,
                      ),
                    ),
                  ),
                  Divider(),
                  ListTile(
                    title: Text(
                      'GitHub',
                      style: TextStyle(
                        color: Colors.deepOrange,
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                      ),
                    ),
                    subtitle: Text(
                      'https://github.com/leopalmeiro',
                      style: TextStyle(
                        fontSize: 18,
                      ),
                    ),
                  ),
                  Divider(),
                  ListTile(
                    title: Text(
                      'Linkedin',
                      style: TextStyle(
                        color: Colors.deepOrange,
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                      ),
                    ),
                    subtitle: Text(
                      'www.linkedin.com/in/leonardo-palmeiro-834a1755',
                      style: TextStyle(
                        fontSize: 18,
                      ),
                    ),
                  ),
                ],
              ),
            )
          ],
        ),
      ),
    );
  }
}

class CardExample extends StatelessWidget {
  final String title;
  final String subtitle;
  final String content;
  final VoidCallback onPressed1;
  final VoidCallback onPressed2;

  const CardExample({
    required this.title,
    required this.subtitle,
    required this.content,
    required this.onPressed1,
    required this.onPressed2,
    Key? key,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Card(
      child: Container(
        width: 200,
        padding: EdgeInsets.all(8),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(title, style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold)),
            Text(subtitle, style: TextStyle(fontSize: 14)),
            SizedBox(height: 8),
            Text(content),
            SizedBox(height: 8),
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                ElevatedButton(
                  onPressed: onPressed1,
                  child: Text('Chat'),
                ),
                ElevatedButton(
                  onPressed: onPressed2,
                  child: Text('Study'),
                ),
              ],
            ),
          ],
        ),
      ),
    );
  }
}

class Community {
  final String name;
  final String description;
  final String category;

  Community({
    required this.name,
    required this.description,
    required this.category,
  });
}

class CreateCommunityPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Buat Komunitas'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            TextFormField(
              decoration: InputDecoration(
                labelText: 'Nama Komunitas',
              ),
            ),
            SizedBox(height: 16),
            TextFormField(
              decoration: InputDecoration(
                labelText: 'Deskripsi Komunitas',
              ),
              maxLines: 3,
            ),
            SizedBox(height: 16),
            TextFormField(
              decoration: InputDecoration(
                labelText: 'Kategori Komunitas',
              ),
            ),
            SizedBox(height: 16),
            ElevatedButton(
              onPressed: () {
                // Logic to create community
                Navigator.pop(context);
              },
              child: Text('Buat Komunitas'),
            ),
          ],
        ),
      ),
    );
  }
}

// New page for Chat Forum
class ChatForumPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Forum Chat'),
      ),
      body: Center(
        child: Text('This is the Chat Forum Page'),
      ),
    );
  }
}
